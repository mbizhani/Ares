<operation>
	<services>
		<service name="Linux" adminPort="22">
			<commands>

				<command name="changePassword">
					<params>
						<param name="Username" required="true"/>
						<param name="NewPassword" required="true"/>
					</params>

					<body><![CDATA[
ssh{
	prompt "Change Password for '${Username}'"
	cmd "passwd ${Username} --stdin"
	stdin NewPassword
}
$userPasswordUpdated(Username, NewPassword)
]]></body>
				</command>

				<command name="fileUpload">
					<params>
						<param name="File" type="File" required="true"/>
					</params>

					<body><![CDATA[
$scpTo($param('File'), '~')
]]></body>
				</command>

				<command name="service">
					<params>
						<param name="Name" required="true"/>
						<param name="Action" required="true" stringLiterals="start|stop|restart|status"/>
					</params>

					<body><![CDATA[
ssh {
	prompt "Action for service '${Name}': ${Action}"
	cmd "service ${Name} ${Action}"
}
]]></body>
				</command>

				<command name="killProcess">
					<params>
						<param name="ProcessName" required="true"/>
						<param name="Username" required="true"/>
						<param name="Dash9" type="Boolean" required="true" defaultValue="false"/>
					</params>

					<body><![CDATA[
def d9 = Dash9 ? '-9' : ''
def processes = oListProcess([ProcessName: ProcessName, Username: Username])
processes.rows.each {r ->
	ssh {
		prompt "Kill Process: pid=${r.pid}"
		cmd "kill ${d9} ${r.pid}"
		force true
	}
}

return null
]]></body>
				</command>

				<command name="jStack">
					<params>
						<param name="Username" required="true"/>
						<param name="PID"/>
					</params>

					<body><![CDATA[
def prc = oListProcess([ProcessName: 'java', Username: Username, PID: $param('PID')])

if(!prc.rows.empty) {
	def pid = prc.rows[0].pid
	ssh {
		prompt "Show Java Stack Trace (found=${prc.rows.size()}): PID=${pid}"
		cmd "su - ${Username} -c 'jstack ${pid}'"
	}
} else {
	$error('No java process found!')
}
]]></body>
				</command>

				<command name="pkg">
					<params>
						<param name="Name" required="true"/>
						<param name="Action" required="true"
							   stringLiterals="Search|Info|DepList|CheckInstall|Install|CheckUnInstall|UnInstall"
							   defaultValue="Search"/>
					</params>

					<body><![CDATA[
ssh {
	prompt 'Update Repo Info'
	cmd 'yum makecache'
}

switch(Action) {
	case 'Search':
		ssh {
			prompt "Search for '${Name}'"
			cmd "yum list all | grep ${Name}"
			result {
				it.toTabular('\\s{1,}')
				  .prepend("Package Version Repository\n")
			}
		}
		break

	case 'Info':
		ssh {
			prompt "Info for '${Name}'"
			cmd "yum info ${Name}"
		}
		break

	case 'DepList':
		ssh {
			prompt "List Dependency(ies) for '${Name}'"
			cmd "yum deplist ${Name}"
		}
		break

	case 'CheckInstall':
		ssh {
			prompt "Check Installation for '${Name}'"
			cmd "yum --assumeno install ${Name}"
			force true
		}
		break

	case 'Install':
		ssh {
			prompt "Installing '${Name}'"
			cmd "yum -y -q install ${Name}"
		}
		break

	case 'CheckUnInstall':
		ssh {
			prompt "Check UnInstallation for '${Name}'"
			cmd "yum --assumeno remove ${Name}"
			force true
		}
		break

	case 'UnInstall':
		ssh {
			prompt "UnInstalling '${Name}'"
			cmd "yum -y remove ${Name}"
		}
		break
}
]]></body>
				</command>

				<!-- ============= OS QUERY ============= -->

				<command name="oQuery">
					<params>
						<param name="Prompt" defaultValue="Querying"/>
						<param name="Sql" required="true"/>
						<param name="LimStart" required="true" defaultValue="0"/>
						<param name="LimCount" required="true" defaultValue="150"/>
					</params>

					<body><![CDATA[
def sql_lim = "${Sql} limit ${LimStart}, ${LimCount}"
def sql_cnt = "select count(*) from (${Sql})"

def cnt = ssh {
	prompt "Counting: ${Prompt}"
	cmd """ osqueryi "${sql_cnt}" --csv --noheader """
	result {
		it.toInteger()
	}
}

ssh {
	prompt Prompt
	cmd """ osqueryi "${sql_lim}" --csv """
	result {
		it.toTabular("[|]")
		  .setSize(cnt)
		  .build()
	}
}
]]></body>
				</command>

				<command name="oListUser">
					<params>
						<param name="Uid"/>
						<param name="Username"/>
						<param name="ShowNormal" type="Boolean" required="true" defaultValue="true"/>
					</params>

					<body><![CDATA[
def sql = "select uid, username, description, directory, shell from users where 1=1"

if($param("Uid"))
	sql += " and uid = '${Uid}'"

if($param("Username"))
	sql += " and username = '${Username}'"

if(ShowNormal)
	sql += " and shell='/bin/bash'"

oQuery([Prompt: 'List of Users', Sql: sql])
]]></body>
				</command>

				<command name="oListProcess">
					<params>
						<param name="ProcessName"/>
						<param name="Username"/>
						<param name="ShowProcessPath" type="Boolean" required="true" defaultValue="false"/>
						<param name="ShowCmdline" type="Boolean" required="true" defaultValue="false"/>
						<param name="SortBy" defaultValue="resident_size"
							   stringLiterals="process_name|username|resident_size|threads"/>
						<param name="SortMod" defaultValue="desc" stringLiterals="desc|asc"/>
					</params>

					<body><![CDATA[
def sql = "select pr.pid, pr.name process_name, us.username, pr.state, pr.resident_size, pr.total_size, pr.threads"

if(ShowProcessPath)
	sql += ", pr.path process_path"

if(ShowCmdline)
	sql += ", pr.cmdline"


sql += " from processes pr join users us using(uid) where 1=1"


if($param("PID"))
	sql += " and pr.pid = '${PID}'"

if($param("ProcessName"))
	sql += " and pr.name = '${ProcessName}'"

if($param("Username"))
	sql += " and us.username = '${Username}'"

if($param("SortBy")) {
	def mod = $param("SortMod") ? SortMod : 'desc'
	sql = "select * from (${sql}) order by ${SortBy} ${mod}"
}

oQuery([Prompt: 'List of Processes', Sql: sql])]]></body>
				</command>

				<command name="oListOpenSocket">
					<params>
						<param name="Pid"/>
						<param name="ProcessName"/>
						<param name="Protocol"/>
						<param name="RemoteAddress"/>
						<param name="RemotePort"/>
						<param name="Username"/>
						<param name="ShowProcessPath" type="Boolean" required="true" defaultValue="false"/>
						<param name="ShowCmdline" type="Boolean" required="true" defaultValue="false"/>
					</params>

					<body><![CDATA[
def sql = "select pr.pid, pr.name process_name, os.protocol, os.local_address, os.local_port, os.remote_address, os.remote_port, us.username"

if(ShowProcessPath)
	sql += ", pr.path process_path"

if(ShowCmdline)
	sql += ", pr.cmdline"

sql += " from process_open_sockets os join processes pr using(pid) join users us using(uid) where 1=1"

if($param("Pid"))
	sql += " and pr.pid = '${Pid}'"

if($param("Protocol"))
	sql += " and os.protocol = '${Protocol}'"

if($param("RemoteAddress"))
	sql += " and os.remote_address = '${RemoteAddress}'"

if($param("RemotePort"))
	sql += " and os.remote_port = '${RemotePort}'"

if($param("ProcessName"))
	sql += " and pr.name = '${ProcessName}'"

if($param("Username"))
	sql += " and us.username = '${Username}'"

oQuery([Prompt: 'List of Opened Sockets', Sql: sql])
]]></body>
				</command>

				<command name="oListOpenFile">
					<params>
						<param name="Pid"/>
						<param name="ProcessName"/>
						<param name="Username"/>
						<param name="ShowProcessPath" type="Boolean" required="true" defaultValue="false"/>
						<param name="ShowCmdline" type="Boolean" required="true" defaultValue="false"/>
					</params>

					<body><![CDATA[
def sql = "select pr.pid, pr.name process_name, of.path file_path, us.username"

if(ShowProcessPath)
	sql += ", pr.path process_path"

if(ShowCmdline)
	sql += ", pr.cmdline"

sql += " from process_open_files of join processes pr using(pid) join users us using(uid) where 1=1"

if($param("Pid"))
	sql += " and pr.pid = '${Pid}'"

if($param("ProcessName"))
	sql += " and pr.name = '${ProcessName}'"

if($param("Username"))
	sql += " and us.username = '${Username}'"

oQuery([Prompt: 'List of Opened Files', Sql: sql])
]]></body>
				</command>

			</commands>
		</service>
	</services>
</operation>