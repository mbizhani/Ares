<operation>
	<services>
		<service name="Oracle" type="Database"
				 connectionPattern="jdbc:oracle:thin:@${target.address}:${target.port}:${target.prop.sid}">

			<properties>
				<property name="driver" required="true"/>
				<property name="sid" required="true"/>
				<property name="dbDir" required="true"/>
				<property name="osDbDir" required="true"/>
			</properties>

			<commands>
				<command name="checkDBUser">
					<params>
						<param name="username" type="string" required="true"/>
					</params>
					<body>
						<![CDATA[
return $cmd.sql("select count(1) from all_users where username='${username}'") > 0
]]>
					</body>
				</command>

				<command name="truncateDBUser">
					<params>
						<param name="schema" type="string" required="true"/>
					</params>
					<body>
						<![CDATA[
$cmd.sqlBlock("""
DECLARE
	scname varchar2(20);
BEGIN
	scname := '${schema}.toUpperCase()';

	--Bye Sequences!
	for i in (select us.sequence_name from all_sequences us where us.sequence_owner = scname) loop
		execute immediate 'drop sequence '||scname||'.'|| i.sequence_name;
	end loop;

	--Bye Tables!
	for i in (select ut.table_name from all_tables ut where ut.owner = scname) loop
		execute immediate 'drop table '||scname||'.'|| i.table_name ||' cascade constraints purge';
	end loop;

	--Bye Synonyms!
	for i in (select us.synonym_name from dba_synonyms us where us.owner = scname) loop
		execute immediate 'drop synonym '||scname||'.'|| i.synonym_name;
	end loop;
end;
""")
]]>
					</body>
				</command>

				<command name="copySchema">
					<params>
						<param name="sourceSchema" type="string" required="true"/>
						<param name="destSchema" type="string" required="true"/>
					</params>
					<body>
						<![CDATA[
if(!$cmd.exec("checkDBUser", [username:sourceSchema])) {
	$cmd.error("No user ${sourceSchema} to export dump from")
}

if(!$cmd.exec("checkDBUser", [username:destSchema])) {
	$cmd.error("No user ${destSchema} to import dump to")
}

$cmd.exec("truncateDBUser", [username:destSchema])

def osService = target.findRelated("Linux");

$cmd.ssh("sudo -S su - oracle -c 'expdp ${target.username}/${target.password} schemas=${sourceSchema} directory=${target.prop.dbDir} dumpfile=${sourceSchema}.dmp logfile=${sourceSchema}.log'", osService, osService.password)

$cmd.ssh("sudo -S su - oracle -c 'impdp ${target.username}/${target.password} remap_schema=${sourceSchema}:${destSchema} directory=${target.prop.dbDir} dumpfile=${destSchema}.dmp logfile=${destSchema}.log'", osService, osService.password)
]]>
					</body>
				</command>

				<command name="backupSchema">
					<params>
						<param name="schema" type="string" required="true"/>
					</params>
					<body>
						<![CDATA[
if(!$cmd.exec("checkDBUser", target, [username:schema])) {
	$cmd.error("No user ${schema} to export dump from")
}

$cmd.ssh("sudo su - oracle -c 'expdp ${target.username}/${target.password} schemas=${schema} directory=${target.prop.dbDir} dumpfile=${schema}_bkup_${$cmd.now('yyyyMMdd_HHmmss', 'fa')}.dmp logfile=${schema}.log'", osService)
]]>
					</body>
				</command>
			</commands>
		</service>

		<service name="SSH" type="Linux">
			<commands>
				<command name="changePassword">
					<params>
						<param name="username" required="true"/>
						<param name="newPassword" required="true"/>
					</params>

					<body>
						<![CDATA[
$cmd.ssh("sudo -S passwd ${username} --stdin", target.password, newPassword);
]]>
					</body>
				</command>
			</commands>
		</service>
	</services>
</operation>